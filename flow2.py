import pandas as pd
from pmdarima import auto_arima
from datetime import datetime, timedelta
from statsmodels.tsa.statespace.sarimax import SARIMAX
import numpy as np

# 历史客流数据
history_data = {
     "2024-04-01": [150, 180, 200, 220, 250, 280, 300, 320, 350, 380, 400, 380, 350, 320, 300, 280, 250, 220, 200, 180, 150, 120, 100, 80, 60, 40, 20, 10, 5, 2, 1,
                   160, 190, 210, 230, 260, 290, 310, 330, 360, 390, 410, 390, 360, 330, 310, 290, 260, 230, 210, 190, 160, 130, 110, 90, 70, 50, 30, 15, 8, 3, 1,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5, 2,
                   180, 210, 230, 250, 280, 310, 330, 350, 380, 410, 430, 410, 380, 350, 330, 310, 280, 250, 230, 210, 180, 150, 130, 110, 90, 70, 50, 30, 15, 8, 3,
                   190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   150, 180, 200, 220, 250, 280, 300, 320, 350, 380, 400, 380, 350, 320, 300, 280, 250, 220, 200, 180, 150, 120, 100, 80, 60, 40, 20, 10, 5, 2],

    "2024-04-02": [160, 190, 210, 230, 260, 290, 310, 330, 360, 390, 410, 390, 360, 330, 310, 290, 260, 230, 210, 190, 160, 130, 110, 90, 70, 50, 30, 15, 8, 3, 1,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5, 2,
                   180, 210, 230, 250, 280, 310, 330, 350, 380, 410, 430, 410, 380, 350, 330, 310, 280, 250, 230, 210, 180, 150, 130, 110, 90, 70, 50, 30, 15, 8, 3,
                   190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   150, 180, 200, 220, 250, 280, 300, 320, 350, 380, 400, 380, 350, 320, 300, 280, 250, 220, 200, 180, 150, 120, 100, 80, 60, 40, 20, 10, 5, 2],

    "2024-04-03": [170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5, 2,
                   180, 210, 230, 250, 280, 310, 330, 350, 380, 410, 430, 410, 380, 350, 330, 310, 280, 250, 230, 210, 180, 150, 130, 110, 90, 70, 50, 30, 15, 8, 3, 1,
                   190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5, 2,
                   150, 180, 200, 220, 250, 280, 300, 320, 350, 380, 400, 380, 350, 320, 300, 280, 250, 220, 200, 180, 150, 120, 100, 80, 60, 40, 20, 10, 5, 2, 1,
                   160, 190, 210, 230, 260, 290, 310, 330, 360, 390, 410, 390, 360, 330, 310, 290, 260, 230, 210, 190, 160, 130, 110, 90, 70, 50, 30, 15, 8, 3, 1],
     "2024-04-04": [180, 210, 230, 250, 280, 310, 330, 350, 380, 410, 430, 410, 380, 350, 330, 310, 280, 250, 230, 210, 180, 150, 130, 110, 90, 70, 50, 30, 15, 8, 3,
                   190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5, 2,
                   150, 180, 200, 220, 250, 280, 300, 320, 350, 380, 400, 380, 350, 320, 300, 280, 250, 220, 200, 180, 150, 120, 100, 80, 60, 40, 20, 10, 5, 2, 1,
                   160, 190, 210, 230, 260, 290, 310, 330, 360, 390, 410, 390, 360, 330, 310, 290, 260, 230, 210, 190, 160, 130, 110, 90, 70, 50, 30, 15, 8, 3, 1,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5],

    "2024-04-05": [190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5, 2,
                   180, 210, 230, 250, 280, 310, 330, 350, 380, 410, 430, 410, 380, 350, 330, 310, 280, 250, 230, 210, 180, 150, 130, 110, 90, 70, 50, 30, 15, 8, 3,
                   190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   150, 180, 200, 220, 250, 280, 300, 320, 350, 380, 400, 380, 350, 320, 300, 280, 250, 220, 200, 180, 150, 120, 100, 80, 60, 40, 20, 10, 5, 2],

    "2024-04-06": [180, 210, 230, 250, 280, 310, 330, 350, 380, 410, 430, 410, 380, 350, 330, 310, 280, 250, 230, 210, 180, 150, 130, 110, 90, 70, 50, 30, 15, 8, 3,
                   190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5, 2,
                   150, 180, 200, 220, 250, 280, 300, 320, 350, 380, 400, 380, 350, 320, 300, 280, 250, 220, 200, 180, 150, 120, 100, 80, 60, 40, 20, 10, 5, 2, 1,
                   160, 190, 210, 230, 260, 290, 310, 330, 360, 390, 410, 390, 360, 330, 310, 290, 260, 230, 210, 190, 160, 130, 110, 90, 70, 50, 30, 15, 8, 3, 1,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5],

  "2024-04-07": [190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5, 2,
                   180, 210, 230, 250, 280, 310, 330, 350, 380, 410, 430, 410, 380, 350, 330, 310, 280, 250, 230, 210, 180, 150, 130, 110, 90, 70, 50, 30, 15, 8, 3,
                   190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   150, 180, 200, 220, 250, 280, 300, 320, 350, 380, 400, 380, 350, 320, 300, 280, 250, 220, 200, 180, 150, 120, 100, 80, 60, 40, 20, 10, 5, 2],

    "2024-04-08": [180, 210, 230, 250, 280, 310, 330, 350, 380, 410, 430, 410, 380, 350, 330, 310, 280, 250, 230, 210, 180, 150, 130, 110, 90, 70, 50, 30, 15, 8, 3,
                   190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5, 2,
                   150, 180, 200, 220, 250, 280, 300, 320, 350, 380, 400, 380, 350, 320, 300, 280, 250, 220, 200, 180, 150, 120, 100, 80, 60, 40, 20, 10, 5, 2, 1,
                   160, 190, 210, 230, 260, 290, 310, 330, 360, 390, 410, 390, 360, 330, 310, 290, 260, 230, 210, 190, 160, 130, 110, 90, 70, 50, 30, 15, 8, 3, 1,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5],

    "2024-04-09": [190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5, 2,
                   180, 210, 230, 250, 280, 310, 330, 350, 380, 410, 430, 410, 380, 350, 330, 310, 280, 250, 230, 210, 180, 150, 130, 110, 90, 70, 50, 30, 15, 8, 3,
                   190, 220, 240, 260, 290, 320, 340, 360, 390, 420, 440, 420, 390, 360, 340, 320, 290, 260, 240, 220, 190, 160, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   170, 200, 220, 240, 270, 300, 320, 340, 370, 400, 420, 400, 370, 340, 320, 300, 270, 240, 220, 200, 170, 140, 120, 100, 80, 60, 40, 25, 12, 5,
                   150, 180, 200, 220, 250, 280, 300, 320, 350, 380, 400, 380, 350, 320, 300, 280, 250, 220, 200, 180, 150, 120, 100, 80, 60, 40, 20, 10, 5, 2]

}

data_list = []
seen_dates = set()  # 用于存储已经出现过的日期

for date_str, values in history_data.items():
    hours, minutes = zip(*[(idx // 6, idx % 6 * 10) for idx, _ in enumerate(values)])
    for h, m, v in zip(hours, minutes, values):
        try:
            date_time = datetime.strptime(f"{date_str} {h:02d}:{m:02d}", '%Y-%m-%d %H:%M')
        except ValueError:
            next_day = datetime.strptime(date_str, '%Y-%m-%d') + pd.Timedelta(days=1)
            date_time = next_day.replace(hour=h // 24, minute=m)

        if date_time not in seen_dates:
            data_list.append({'date': date_time, 'value': v})
            seen_dates.add(date_time)
        else:
            # 处理重复时间戳的逻辑，这里可以根据具体需求进行操作，例如跳过或者合并处理
            print(".")

df = pd.DataFrame(data_list).set_index('date').sort_index()

# 确保数据集是时间序列格式
df.index = pd.DatetimeIndex(df.index)

# 将索引重新设置为频率为10分钟
df = df.asfreq('10T')

# 填充缺失值
df['value'] = df['value'].interpolate(method='time')

# 使用auto_arima函数找到最佳模型参数
stepwise_model = auto_arima(df['value'], start_p=1, start_q=1,
                            max_p=5, max_q=5, m=144,  # m为季节性周期，144个10分钟为一天
                            start_P=0, seasonal=True, d=1, D=1, trace=True,
                            error_action='ignore',  
                            suppress_warnings=True, 
                            stepwise=True)

# 输出最优参数
print("Best ARIMA Parameters:", stepwise_model.order, stepwise_model.seasonal_order)

# 使用statsmodels中的SARIMAX模型进行拟合
model = SARIMAX(df['value'], order=stepwise_model.order, seasonal_order=stepwise_model.seasonal_order, enforce_stationarity=False, enforce_invertibility=False)
result = model.fit(disp=False)

# 预测未来数据，例如预测未来1步
forecast_steps = 1  # 根据需要调整
forecast = result.get_forecast(steps=forecast_steps)

# 获取最后一个时间点
last_date = df.index[-1]

# 创建预测结果的时间索引
forecast_dates = [last_date + timedelta(minutes=10 * i) for i in range(1, forecast_steps + 1)]

# 还原预测结果
forecast_series = forecast.predicted_mean
forecast_series.index = forecast_dates

# 打印预测结果
print("Forecast for the next period:")
print(forecast_series)

